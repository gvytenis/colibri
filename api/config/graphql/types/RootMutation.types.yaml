RootMutation:
    type: object
    config:
        fields:
            createCategory:
                args:
                    category:
                        type: 'CategoryInput!'
                        validation: cascade
                description: Mutation to create new category
                type: 'MutationResponse!'
                resolve: '@=mutation("createCategory", args, validator)'
            updateCategory:
                args:
                    id:
                        type: 'Int!'
                    category:
                        type: 'CategoryInput!'
                        validation: cascade
                description: Mutation to update a category
                type: 'MutationResponse!'
                resolve: '@=mutation("updateCategory", args, validator)'
            deleteCategory:
                args:
                    id:
                        type: 'Int!'
                description: Mutation to delete category
                type: 'MutationResponse!'
                resolve: '@=mutation("deleteCategory", args)'
            createAuthor:
                args:
                    author:
                        type: 'AuthorInput!'
                        validation: cascade
                description: Mutation to create new author
                type: 'MutationResponse!'
                resolve: '@=mutation("createAuthor", args, validator)'
            updateAuthor:
                args:
                    id:
                        type: 'Int!'
                    author:
                        type: 'AuthorInput!'
                        validation: cascade
                description: Mutation to update a author
                type: 'MutationResponse!'
                resolve: '@=mutation("updateAuthor", args, validator)'
            deleteAuthor:
                args:
                    id:
                        type: 'Int!'
                description: Mutation to delete author
                type: 'MutationResponse!'
                resolve: '@=mutation("deleteAuthor", args)'
            createUser:
                args:
                    user:
                        type: 'UserInput!'
                        validation: cascade
                description: Mutation to create new user
                type: 'MutationResponse!'
                resolve: '@=mutation("createUser", args, validator)'
            updateUser:
                args:
                    id:
                        type: 'Int!'
                    user:
                        type: 'UserInput!'
                        validation: cascade
                description: Mutation to update a user
                type: 'MutationResponse!'
                resolve: '@=mutation("updateUser", args, validator)'
            deleteUser:
                args:
                    id:
                        type: 'Int!'
                description: Mutation to delete user
                type: 'MutationResponse!'
                resolve: '@=mutation("deleteUser", args)'
            createBook:
                args:
                    book:
                        type: 'BookInput!'
                        validation: cascade
                description: Mutation to create new book
                type: 'MutationResponse!'
                resolve: '@=mutation("createBook", args, validator)'
            updateBook:
                args:
                    id:
                        type: 'Int!'
                    book:
                        type: 'BookInput!'
                        validation: cascade
                description: Mutation to update a book
                type: 'MutationResponse!'
                resolve: '@=mutation("updateBook", args, validator)'
            deleteBook:
                args:
                    id:
                        type: 'Int!'
                description: Mutation to delete book
                type: 'MutationResponse!'
                resolve: '@=mutation("deleteBook", args)'
            createReservation:
                args:
                    reservation:
                        type: 'ReservationInput!'
                        validation: cascade
                description: Mutation to create new reservation
                type: 'MutationResponse!'
                resolve: '@=mutation("createReservation", args, validator)'

MutationResponse:
    type: object
    config:
        builders:
            - builder: MutationResponse
