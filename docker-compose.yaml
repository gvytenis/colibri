version: '3.9'

services:
    traefik:
        container_name: ${APP_NAME}_traefik
        image: traefik:${TRAEFIK_VERSION}
        command:
            - --api.insecure=true
            - --api.dashboard=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
        ports:
            - '80:80'
            - '8080:8080'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            traefik.enable: true
            traefik.http.routers.traefik.rule: Host(`${APP_NAME}.traefik.localhost`)
            traefik.http.services.traefik.loadbalancer.server.port: 8080
        networks:
            - internal

    php:
        platform: linux/${OS_ARCHITECTURE_TYPE}
        container_name: ${APP_NAME}_php
        env_file:
            - ./.env
        build:
            args:
                - PHP_VERSION=${PHP_VERSION}
                - APCU_VERSION=${APCU_VERSION}
            dockerfile: docker/php/Dockerfile
            context: .
            target: development
        environment:
            - MYSQL_MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
        volumes:
            - ./api:/srv/app
        networks:
            - internal

    nginx:
        platform: linux/${OS_ARCHITECTURE_TYPE}
        container_name: ${APP_NAME}_nginx
        env_file:
            - ./.env
        build:
            dockerfile: docker/nginx/Dockerfile
            context: .
            target: base
            args:
                - NGINX_VERSION=${NGINX_VERSION}
        depends_on:
            - php
        volumes:
            - ./docker/nginx/conf.d/default.dev.conf:/etc/nginx/conf.d/default.conf
            - ./api/public:/srv/app/public
        ports:
            - '8088:80'
        labels:
            traefik.enable: true
            traefik.http.routers.nginx.rule: Host(`${APP_NAME}.backend.localhost`)
            traefik.http.routers.nginx.entrypoints: web
        networks:
            - internal

    mysql:
        platform: linux/${OS_ARCHITECTURE_TYPE}
        container_name: ${APP_NAME}_mysql
        env_file:
            - ./.env
        image: mysql:${MYSQL_VERSION}
        volumes:
            - mysql-storage:/var/lib/mysql:rw
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
        ports:
            - '3306:3306'
        depends_on:
            - php
        networks:
            - internal

    node:
        container_name: ${APP_NAME}_node
        build:
            dockerfile: docker/node/Dockerfile
            context: .
            target: development
            args:
                - NODE_VERSION=${NODE_VERSION}
        volumes:
            - ./app:/srv/app
        ports:
            - '8000:8080'
        command: /bin/sh -c 'yarn && npm run dev'
        labels:
            traefik.enable: true
            traefik.http.routers.node.rule: Host(`${APP_NAME}.frontend.localhost`)
            traefik.http.routers.node.entrypoints: web
        networks:
            - internal

    structurizr:
        image: structurizr/lite:${STRUCTURIZR_VERSION}
        container_name: ${APP_NAME}_structurizr
        ports:
            - '8090:8080'
        volumes:
            - .:/usr/local/structurizr
        labels:
            traefik.enable: true
            traefik.http.routers.structurizr.rule: Host(`${APP_NAME}.docs.localhost`)
        networks:
            - internal

volumes:
    mysql-storage:

networks:
    internal:
        name: ${APP_NAME}_internal
        driver: bridge
